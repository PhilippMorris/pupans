---
- name: Add Nodesource Keys
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present
- name: Import the NodeSource GPG key into apt
  apt_key:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
    id: "68576280"
    state: present
- name: add nodejs repo
  apt_repository:
    repo: deb https://deb.nodesource.com/node_0.12 {{ ansible_distribution_release }} main
    filename: 'nodesource'
    state: present
- name: add nodejs src-repo
  apt_repository:
    repo: deb-src https://deb.nodesource.com/node_0.12 {{ ansible_distribution_release }} main
    filename: 'nodesource'
    state: present
- name: Install basic software 
  apt: 
    name: "{{item}}" 
    state: latest
  with_items:
       - xorg
       - matchbox 
       - nodm
       - numlockx
       - build-essential
       - nodejs
       - android-tools-adb
       - usbmount
  update_cache: yes
- name: create folders
  file:
    path: {{item}}
    state: directory
    mode: 0755
    owner: root
    group: root    
  with_items:
    - /var/www/kiosk/public/app
    - /etc/chromium/policies/managed/
    - /var/www/
- name: Remove files of nodm
  file: 
    path: "{{item}}"
    state: absent
  with_items:
  - /etc/rc2.d/S30nodm
  - /etc/rc4.d/S30nodm
- name: Create file .xsession
  copy: 
    src: files/_.xsession 
    dest: /home/kiosk/.xsession 
    owner: kiosk
    group: kiosk
    mode: 0644
  notify: Restart X
- name: Copy adb
  copy:
    src: files/adb 
    dest: /usr/bin/adb
    owner: root
    group: root
    mode: 0755
- name: copy needed files
  copy: 
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { src: 'files/bridge.conf', dest: '/etc/init/bridge.conf' }
    - { src: 'files/80-removable-storage.rules', dest: '/etc/udev/rules.d/80-removable-storage.rules' }
    - { src: 'files/tty1.conf', dest: '/etc/init/tty1.conf' }
    - { src: 'files/chromium_policies/default.json', dest: '/etc/chromium/policies/managed/default.json' }
    - { src: 'files/kiosk.conf', dest: '/etc/init/kiosk.conf' }
    - { src: 'files/nodm', dest: '/etc/default/nodm' }
  notify: Kiosk Pull
- name: copy bridge and kiosk files
  copy: 
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - { src: 'files/bridge/', dest: '/var/www/bridge/' }
    - { src: 'files/kiosk/', dest: '/opt/kiosk/' }
- cron:
    name: Restart Chromium At Midnight
    minute: 0
    hour: 0
    job: /usr/bin/killall chrome >> /var/log/cronjobs/restart_chromium.log 2>&1
- cron:
    name: Pull Kiosk
    hour: "*/2"
    job: /opt/kiosk/kiosk_pull.sh {{branch}}
- cron:
    name: Pull Kiosk at boot
    reboot: yes
    job: /opt/kiosk/kiosk_pull.sh {{branch}}
- service:
    name: bridge
    enabled: yes
    state: started
- service:
    name: kiosk
    enabled: yes
    state: started